[alias]
    s = !git_status.sh
    stm = stash push -m
    sr = "!f() { git status \"$@\"; GIT_PAGER=cat git stash list; }; f"
    co = checkout
    one = log --oneline
    onens = log --oneline --name-status
    onea = log --format=\"%C(auto) %h %an %d %s\"

    prb = "!f() { [ ! -z \"$@\" ] && git checkout -b \"$@\"_$(date +'%Y%m%d') || echo 'Need branch name!'; }; f"
    fix = commit --fixup
    pushf = push --force-with-lease
    pushfn = push --force-with-lease --no-verify
    amend = commit --amend
    amendf = commit --amend --no-edit
    amendfn = commit --amend --no-edit --no-verify
    af = "!f() { git amendf && git pushf; }; f"
    afn = "!f() { git amendf && git pushf --no-verify; }; f"
    ras = "!f() { git rebase -i --autosquash \"origin/${@:-master}\"; }; f"
    rbc = rebase --continue
    # Diff the modified files in the stash against the working
    # copy. Useful to see if the stash has already been applied.
    stash-diff = "!f() { local stash=\"${@-stash@{0}}\"; git stash show $stash --name-status | grep ^M | while read status file; do echo $file; git diff $stash:$file -- $file | cat; done; }; f"
    nxd = clean -nxd --exclude .envrc --exclude .tool-versions --exclude .vscode --exclude .tox
    fxd = clean -fxd --exclude .envrc --exclude .tool-versions --exclude .vscode --exclude .tox
    ghclone = "!ghclone"
    ci="!f() { env COLUMNS=3 git clean -i \"$@\"; }; f"
    rmgone = "!f() { git branch -v | grep gone | awk '{print $1}' | xargs git branch \"${@--d}\"; }; f"

	files = diff-tree --no-commit-id --name-only -r
    # ghclone = "!f() { set -x; local dir=$(echo \"$@\" | sed \"s/git@github.com:\\(.*\\).git/\\1/\"); git clone \"$@\" $dir; }; f"
   ad = difftool --tool=araxis --dir-diff
   ads = difftool --tool=araxis --dir-diff --staged
[color]
    ui = never
[core]
	excludesfile = /Users/ajp/.gitignore
	logAllRefUpdates = true
[push]
	default = current
[pull]
	ff = only
[difftool "opendiff"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	template = /Users/ajp/.stCommitMsg
[advice]
	detachedHead = false
[init]
	defaultBranch = main
[stash]
	showIncludeUntracked = true
    showPatch = true
[status]
    showStash = true
[cola]
	expandtab = true
# [diff]
#     external = difft

[difftool "bcomp"]
  trustExitCode = true
  cmd = "/usr/local/bin/bcomp" \"$LOCAL\" \"$REMOTE\"
  prompt = false
[rebase]
	updateRefs = true
[git]
	autoRefresh = false
	autoFetch = false
[grep]
	extendedRegexp = true

[user]
	name = Alan Potter
	email = apotter@formotiv.com
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[credential]
	helper = "!f() { /root/.vscode-server/bin/fabdb6a30b49f79a7aba0f2ad9df9b399473380f/node /tmp/vscode-remote-containers-e844cfe6-74e5-4c71-8e20-d156d918323b.js git-credential-helper $*; }; f"
